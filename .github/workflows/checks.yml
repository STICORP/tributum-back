name: Code Quality Checks

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  quality-checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Format check
      run: uv run ruff format --check .

    - name: Lint check
      run: uv run ruff check .

    - name: Type check
      run: uv run mypy .

    - name: Security - Bandit
      run: uv run bandit -r . -c pyproject.toml

    - name: Security - Safety
      run: ./scripts/tool safety scan || true
      continue-on-error: true  # Safety sometimes has issues with private packages

    - name: Security - pip-audit
      run: uv run pip-audit --ignore-vuln PYSEC-2022-42969

    - name: Static Analysis - Semgrep
      run: ./scripts/tool semgrep . --config=auto --error
      continue-on-error: true  # Don't fail build on semgrep issues initially

    - name: Dead Code Check
      run: uv run vulture . --config=pyproject.toml

    - name: Docstring Quality
      run: uv run pydoclint src/ --config=pyproject.toml

    - name: Run tests
      run: |
        uv run pytest -x --tb=short

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - name: Set up Python
      run: uv python install

    - name: Install dependencies
      run: uv sync --all-extras --dev

    - name: Run pre-commit
      run: |
        uv run pre-commit run --all-files --show-diff-on-failure
