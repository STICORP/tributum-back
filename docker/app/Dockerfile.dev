# Development Dockerfile for Tributum
# Includes development tools and hot-reload support

FROM python:3.13-slim

# Install system dependencies including development tools
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    curl \
    git \
    vim \
    postgresql-client \
    # Debugging tools
    strace \
    procps \
    netcat-traditional \
    && rm -rf /var/lib/apt/lists/*

# Install UV package manager
RUN pip install --no-cache-dir uv

# Create non-root user (same as production for consistency)
RUN useradd -m -u 1000 -s /bin/bash tributum

# Set working directory
WORKDIR /app

# Copy dependency files first (for better caching)
COPY pyproject.toml uv.lock ./

# Install ALL dependencies (including dev dependencies)
# Run as root to ensure permissions are correct
RUN uv sync --frozen

# Copy application code (will be overridden by volume mount)
COPY --chown=tributum:tributum . .

# Create necessary directories with proper permissions before switching user
RUN mkdir -p /app/logs /app/.pytest_cache && \
    chown -R tributum:tributum /app/logs /app/.pytest_cache

# Switch to non-root user
USER tributum

# Ensure .venv/bin is in PATH
ENV PATH="/app/.venv/bin:$PATH" \
    PYTHONPATH="/app:$PYTHONPATH" \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    # Development environment
    ENVIRONMENT=development \
    # Enable debug mode
    DEBUG=true \
    # Enable hot reload
    WATCHFILES_FORCE_POLLING=true \
    # Default API settings for development containers
    API_HOST=0.0.0.0 \
    API_PORT=8000

# Expose port (FastAPI default)
EXPOSE 8000

# Health check (same as production)
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Set entrypoint
ENTRYPOINT ["/app/docker/scripts/entrypoint.sh"]

# Default command with hot-reload enabled
# --reload-dir ensures we only watch relevant directories
CMD ["python", "-m", "uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--reload-dir", "/app/src"]
