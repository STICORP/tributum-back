repos:
  # Format check using Makefile
  - repo: local
    hooks:
      - id: format-check
        name: ruff format check
        entry: make format-check
        language: system
        pass_filenames: false
        types: [python]

  # Then run general pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-toml
      - id: check-json
      - id: detect-private-key
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-ast  # Verify Python syntax
      - id: check-docstring-first  # Ensure docstring comes first
      - id: debug-statements  # Check for debugger imports and breakpoints
      - id: name-tests-test  # Ensure test files are named correctly
        args: [--pytest-test-first]

  # Lint check using Makefile
  - repo: local
    hooks:
      - id: lint-check
        name: ruff lint check
        entry: make lint
        language: system
        pass_filenames: false
        types: [python]

  # Type checking - runs on entire codebase to catch cascading type errors
  - repo: local
    hooks:
      - id: mypy-all
        name: mypy (entire codebase)
        entry: make type-check
        language: system
        pass_filenames: false
        always_run: true
        types: [python]

      - id: pyright-all
        name: pyright/pylance (entire codebase)
        entry: make pyright
        language: system
        pass_filenames: false
        always_run: true
        types: [python]

  # Complexity check
  - repo: local
    hooks:
      - id: complexity-check
        name: mccabe complexity check
        entry: make complexity-check
        language: system
        pass_filenames: false
        types: [python]

  # Security check using Makefile
  - repo: local
    hooks:
      - id: bandit-check
        name: bandit security scan
        entry: make security-bandit
        language: system
        pass_filenames: false
        types: [python]

  - repo: local
    hooks:
      - id: safety-check
        name: safety check
        entry: make security-safety
        language: system
        pass_filenames: false
        files: ^(pyproject\.toml|uv\.lock)$

      - id: pip-audit
        name: pip audit
        entry: make security-pip-audit
        language: system
        pass_filenames: false
        files: ^(pyproject\.toml|uv\.lock)$

  # Semgrep using isolated tool
  - repo: local
    hooks:
      - id: semgrep-check
        name: semgrep static analysis
        entry: make security-semgrep
        language: system
        pass_filenames: false
        exclude: ^tests/

  # Dead code check using Makefile
  - repo: local
    hooks:
      - id: vulture-check
        name: vulture dead code check
        entry: make dead-code
        language: system
        pass_filenames: false

  # Docstring quality check using Makefile
  - repo: local
    hooks:
      - id: pydoclint-check
        name: pydoclint docstring quality
        entry: make docstring-quality
        language: system
        pass_filenames: false
        exclude: ^(tests/|htmlcov/)

  # Pylint for catching variable shadowing issues
  - repo: local
    hooks:
      - id: pylint-check
        name: pylint (shadowing check)
        entry: make pylint-check
        language: system
        pass_filenames: false
        exclude: ^tests/  # Exclude test files as shadowing is common in fixtures

  # Shellcheck for shell script linting
  - repo: local
    hooks:
      - id: shellcheck
        name: shellcheck
        entry: make shellcheck
        language: system
        pass_filenames: false
        types: [shell]

  # Run all tests to catch breaking changes
  - repo: local
    hooks:
      - id: pytest
        name: pytest
        entry: make test-precommit
        language: system
        pass_filenames: false  # Run all tests
        always_run: true  # Run even if no test files changed

ci:
  autofix_commit_msg: "style: auto fixes from pre-commit.com hooks"
  autofix_prs: true
  autoupdate_commit_msg: "chore: pre-commit autoupdate"
  autoupdate_schedule: weekly
